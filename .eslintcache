[{"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/index.js":"1","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/App.js":"2","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/index.js":"3","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/goals.js":"4","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/Footer.js":"5","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/Dashboard.js":"6","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/NavBar.js":"7","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/SignIn.js":"8","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionUpdateForm.js":"9","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/UserEditForm.js":"10","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountsPanel.js":"11","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountForm.js":"12","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountUpdateForm.js":"13","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetFrom.js":"14","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetsPanel.js":"15","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountTransactionsView.js":"16","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionsPanel.js":"17","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionForm.js":"18","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetUpdateForm.js":"19","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillsPanel.js":"20","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillUpdateForm.js":"21","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/SignUp.js":"22","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalUpdateForm.js":"23","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalView.js":"24","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/currentUser.js":"25","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/transactions.js":"26","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/accounts.js":"27","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillForm.js":"28","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetView.js":"29","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalsPanel.js":"30","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalForm.js":"31","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/budgets.js":"32","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/userActions.js":"33","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectAccount.js":"34","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/bills.js":"35","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectBudget.js":"36","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectTransaction.js":"37","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectBill.js":"38","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectGoal.js":"39","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountsContainer.js":"40","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionsContainer.js":"41","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalsContainer.js":"42","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetsContainer.js":"43","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillsContainer.js":"44","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/goalsActions.js":"45","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalViewItem.js":"46","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalPanelItem.js":"47","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetViewItem.js":"48","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/billActions.js":"49","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillPanelItem.js":"50","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillContainerItem.js":"51","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetContainerItem.js":"52","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalContainerItem.js":"53","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/transactionActions.js":"54","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/budgetActions.js":"55","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetPanelItem.js":"56","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionContainerItem.js":"57","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionPanelItem.js":"58","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/accountActions.js":"59","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountPanelItem.js":"60","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/index.js":"61","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/App.js":"62","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/index.js":"63","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/DocSignIn.js":"64","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/actions/userActions.js":"65","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/currentUser.js":"66","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/actions/doctorActions.js":"67","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/loggedin/Dashboard.js":"68","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/DocSignUp.js":"69","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/loggedin/DoctorDashboard.js":"70","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/type/DocApp.js":"71","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/type/UserApp.js":"72","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/UserEditForm.js":"73","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/SignUp.js":"74","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/SignIn.js":"75","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/Footer.js":"76","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/NavBar.js":"77","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/doctor/NavBar.js":"78","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/currentDoctor.js":"79","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/LoggedInFooter.js":"80","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/index.js":"81","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/NavBar.js":"82","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/InsuranceContainer.js":"83","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/InsuranceList.js":"84","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/SpecialtiesContainer.js":"85","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/SpecialtyList.js":"86","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/HomeContainer.js":"87","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/Title.js":"88","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/SearchBar.js":"89","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/ResultsCon.js":"90","/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/Results.js":"91"},{"size":621,"mtime":1613603943000,"results":"92","hashOfConfig":"93"},{"size":3948,"mtime":1613603943000,"results":"94","hashOfConfig":"93"},{"size":960,"mtime":1613603943000,"results":"95","hashOfConfig":"93"},{"size":789,"mtime":1613603943000,"results":"96","hashOfConfig":"93"},{"size":2953,"mtime":1613603943000,"results":"97","hashOfConfig":"93"},{"size":1561,"mtime":1613603943000,"results":"98","hashOfConfig":"93"},{"size":7711,"mtime":1613603943000,"results":"99","hashOfConfig":"93"},{"size":4472,"mtime":1613603943000,"results":"100","hashOfConfig":"93"},{"size":8149,"mtime":1613603943000,"results":"101","hashOfConfig":"93"},{"size":9041,"mtime":1613603943000,"results":"102","hashOfConfig":"93"},{"size":1460,"mtime":1613603943000,"results":"103","hashOfConfig":"93"},{"size":4158,"mtime":1613603943000,"results":"104","hashOfConfig":"93"},{"size":5552,"mtime":1613603943000,"results":"105","hashOfConfig":"93"},{"size":5052,"mtime":1613603943000,"results":"106","hashOfConfig":"93"},{"size":1452,"mtime":1613603943000,"results":"107","hashOfConfig":"93"},{"size":4257,"mtime":1613603943000,"results":"108","hashOfConfig":"93"},{"size":4076,"mtime":1613603943000,"results":"109","hashOfConfig":"93"},{"size":8251,"mtime":1613603943000,"results":"110","hashOfConfig":"93"},{"size":5091,"mtime":1613603943000,"results":"111","hashOfConfig":"93"},{"size":1548,"mtime":1613603943000,"results":"112","hashOfConfig":"93"},{"size":5079,"mtime":1613603943000,"results":"113","hashOfConfig":"93"},{"size":10208,"mtime":1613603943000,"results":"114","hashOfConfig":"93"},{"size":4330,"mtime":1613603943000,"results":"115","hashOfConfig":"93"},{"size":4134,"mtime":1613603943000,"results":"116","hashOfConfig":"93"},{"size":411,"mtime":1613603943000,"results":"117","hashOfConfig":"93"},{"size":876,"mtime":1613603943000,"results":"118","hashOfConfig":"93"},{"size":827,"mtime":1613603943000,"results":"119","hashOfConfig":"93"},{"size":4962,"mtime":1613603943000,"results":"120","hashOfConfig":"93"},{"size":4445,"mtime":1613603943000,"results":"121","hashOfConfig":"93"},{"size":1544,"mtime":1613603943000,"results":"122","hashOfConfig":"93"},{"size":4189,"mtime":1613603943000,"results":"123","hashOfConfig":"93"},{"size":826,"mtime":1613603943000,"results":"124","hashOfConfig":"93"},{"size":520,"mtime":1613603943000,"results":"125","hashOfConfig":"93"},{"size":272,"mtime":1613603943000,"results":"126","hashOfConfig":"93"},{"size":789,"mtime":1613603943000,"results":"127","hashOfConfig":"93"},{"size":267,"mtime":1613603943000,"results":"128","hashOfConfig":"93"},{"size":288,"mtime":1613603943000,"results":"129","hashOfConfig":"93"},{"size":259,"mtime":1613603943000,"results":"130","hashOfConfig":"93"},{"size":259,"mtime":1613603943000,"results":"131","hashOfConfig":"93"},{"size":4249,"mtime":1613603943000,"results":"132","hashOfConfig":"93"},{"size":1624,"mtime":1613603943000,"results":"133","hashOfConfig":"93"},{"size":1030,"mtime":1613603943000,"results":"134","hashOfConfig":"93"},{"size":1071,"mtime":1613603943000,"results":"135","hashOfConfig":"93"},{"size":998,"mtime":1613603943000,"results":"136","hashOfConfig":"93"},{"size":488,"mtime":1613603943000,"results":"137","hashOfConfig":"93"},{"size":555,"mtime":1613603943000,"results":"138","hashOfConfig":"93"},{"size":4397,"mtime":1613603943000,"results":"139","hashOfConfig":"93"},{"size":559,"mtime":1613603943000,"results":"140","hashOfConfig":"93"},{"size":488,"mtime":1613603943000,"results":"141","hashOfConfig":"93"},{"size":2834,"mtime":1613603943000,"results":"142","hashOfConfig":"93"},{"size":1266,"mtime":1613603943000,"results":"143","hashOfConfig":"93"},{"size":3038,"mtime":1613603943000,"results":"144","hashOfConfig":"93"},{"size":1418,"mtime":1613603943000,"results":"145","hashOfConfig":"93"},{"size":623,"mtime":1613603943000,"results":"146","hashOfConfig":"93"},{"size":526,"mtime":1613603943000,"results":"147","hashOfConfig":"93"},{"size":1849,"mtime":1613603943000,"results":"148","hashOfConfig":"93"},{"size":579,"mtime":1613603943000,"results":"149","hashOfConfig":"93"},{"size":3144,"mtime":1613603943000,"results":"150","hashOfConfig":"93"},{"size":547,"mtime":1613603943000,"results":"151","hashOfConfig":"93"},{"size":1932,"mtime":1613603943000,"results":"152","hashOfConfig":"93"},{"size":927,"mtime":1614650122985,"results":"153","hashOfConfig":"154"},{"size":1024,"mtime":1614650395871,"results":"155","hashOfConfig":"154"},{"size":427,"mtime":1614633977238,"results":"156","hashOfConfig":"154"},{"size":4486,"mtime":1614539660753,"results":"157","hashOfConfig":"154"},{"size":520,"mtime":1613603943000,"results":"158","hashOfConfig":"154"},{"size":411,"mtime":1613603943000,"results":"159","hashOfConfig":"154"},{"size":564,"mtime":1614483658423,"results":"160","hashOfConfig":"154"},{"size":1068,"mtime":1614650319683,"results":"161","hashOfConfig":"154"},{"size":10491,"mtime":1614534985720,"results":"162","hashOfConfig":"154"},{"size":958,"mtime":1614644872895,"results":"163","hashOfConfig":"154"},{"size":1582,"mtime":1614637855073,"results":"164","hashOfConfig":"154"},{"size":1676,"mtime":1614637699467,"results":"165","hashOfConfig":"154"},{"size":8359,"mtime":1614634947823,"results":"166","hashOfConfig":"154"},{"size":10587,"mtime":1614542662308,"results":"167","hashOfConfig":"154"},{"size":3931,"mtime":1614636908105,"results":"168","hashOfConfig":"154"},{"size":4646,"mtime":1614650433937,"results":"169","hashOfConfig":"154"},{"size":8226,"mtime":1614561193949,"results":"170","hashOfConfig":"154"},{"size":7035,"mtime":1614561230954,"results":"171","hashOfConfig":"154"},{"size":432,"mtime":1614483476814,"results":"172","hashOfConfig":"154"},{"size":4789,"mtime":1614544599899,"results":"173","hashOfConfig":"154"},{"size":1466,"mtime":1614650356375,"results":"174","hashOfConfig":"154"},{"size":6969,"mtime":1614637883254,"results":"175","hashOfConfig":"154"},{"size":702,"mtime":1614548208206,"results":"176","hashOfConfig":"154"},{"size":496,"mtime":1614551415968,"results":"177","hashOfConfig":"154"},{"size":747,"mtime":1614550974345,"results":"178","hashOfConfig":"154"},{"size":504,"mtime":1614551326076,"results":"179","hashOfConfig":"154"},{"size":431,"mtime":1614626446280,"results":"180","hashOfConfig":"154"},{"size":383,"mtime":1614557518809,"results":"181","hashOfConfig":"154"},{"size":1394,"mtime":1614557572980,"results":"182","hashOfConfig":"154"},{"size":651,"mtime":1614650406544,"results":"183","hashOfConfig":"154"},{"size":990,"mtime":1614632710181,"results":"184","hashOfConfig":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"4y32kz",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"187"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"187"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"187"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"187"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"187"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"187"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"187"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},"wubavo",{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"316"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/index.js",[],["378","379"],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/App.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/index.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/goals.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/Footer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/Dashboard.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/NavBar.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/SignIn.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionUpdateForm.js",["380"],"import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport {connect} from 'react-redux'\nimport { updateTransaction } from '../actions/transactionActions';\nimport Test from '../images/Test.png'\nclass TransactionUpdateForm extends React.Component {\n    state = {\n        date: this.props.selectTransaction.date,\n        description: this.props.selectTransaction.description,\n        amount: this.props.selectTransaction.amount,\n        category: this.props.selectTransaction.category,\n        budget_id: this.props.selectTransaction.budget_id,\n        account_id: this.props.selectTransaction.account_id,\n        to_account_id: this.props.selectTransaction.to_account_id,\n        goal_id: this.props.selectTransaction.goal_id,\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleInputId = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleInputAmt = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n\n\n    renderBudgets = () => {\n        return this.props.budgets.map(budgetObj => {\n            return <option value={budgetObj.id}>{budgetObj.name}</option>\n        })\n    }\n    renderAccounts = () => {\n        return this.props.accounts.map(accountObj => {\n            return <option value={accountObj.id}>{accountObj.name} - ${accountObj.balance}</option>\n        })\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/transactions/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                date: this.state.date,\n                description: this.state.description,\n                amount: this.state.amount,\n                budget_id: this.state.budget_id,\n                account_id: this.state.account_id,\n                to_account_id: this.state.to_account_id,\n                goal_id: this.state.goal_id,\n                category: this.state.category\n            })\n        })\n        .then(response => response.json())\n        .then(updatedTransObj => {\n            if (updatedTransObj.error){\n                this.setState({\n                    error: updatedTransObj.error\n                })\n            } else {\n            this.props.updateTransaction(updatedTransObj)\n            this.props.history.push('/transactions')\n            }\n        })\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render(){\n        return(\n            <div className=\"transaction-form\" >\n\n                    {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null }\n\n                <h1>Update Transaction</h1>\n                <Form onSubmit={this.handleSubmit} id={this.props.selectTransaction.id} >\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridDate\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\"  placeholder=\"Select transaction date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Vendor, purchase, etc.\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Auto & Transport</option>\n                        <option>Bills & Utilities</option>\n                        <option>Business Services</option>\n                        <option>Education</option>\n                        <option>Entertainment</option>\n                        <option>Fees & Charges</option>\n                        <option>Financial</option>\n                        <option>Food & Dining</option>\n                        <option>Gifts & Donations</option>\n                        <option>Health & Fitness</option>\n                        <option>Home</option>\n                        <option>Income</option>\n                        <option>Investments</option>\n                        <option>Kids</option>\n                        <option>Loans</option>\n                        <option>Misc Expenses</option>\n                        <option>Personal Care</option>\n                        <option>Pets</option>\n                        <option>Shopping</option>\n                        <option>Taxes</option>\n                        <option>Transfer</option>\n                        <option>Travel</option>\n                        <option>Withdrawal</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridBudgetId\">\n                    <Form.Label>Budget </Form.Label>\n                    <Form.Control as=\"select\" name=\"budget_id\" value={this.state.budget_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderBudgets()}\n                    </Form.Control>\n                </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFromAccount\">\n                    <Form.Label>From Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"account_id\" value={this.state.account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridToAccount\">\n                    <Form.Label>To Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"to_account_id\" value={this.state.to_account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridAmount\">\n                    <Form.Label>Amount</Form.Label>\n                    <Form.Control type=\"number\" name=\"amount\" as=\"input\" value={this.state.amount} onChange={this.handleInputAmt} step=\"0.01\"/>\n                    </Form.Group>\n                </Form.Row> \n                <img className=\"transaction-form-image\" src={Test} height=\"300px\" width=\"300px\" >\n                </img><br></br>\n\n                <Button variant=\"primary\" onClick={() => this.props.history.goBack()}>Cancel</Button>\n                <Button variant=\"success\" type=\"submit\">Update Transaction </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        budgets: state.budgets,\n        accounts: state.accounts,\n        goals: state.goals,\n        selectTransaction: state.selectTransaction \n    }\n}\n\nconst mapDispatchToProps = {\n    updateTransaction: updateTransaction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionUpdateForm)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/UserEditForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountsPanel.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountForm.js",["381"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport {connect} from 'react-redux';\nimport { addAccount } from '../actions/accountActions';\nimport AccountsImg from '../images/Accounts.png'\nclass AccountForm extends React.Component {\n    state = {\n        name: \"\",\n        category: \"\",\n        balance: \"\",\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleBalanceChange = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/accounts\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                name: this.state.name, \n                category: this.state.category, \n                balance: this.state.balance, \n                user_id: this.props.currentUser.id\n            })\n        })\n        .then(response => response.json())\n        .then(newAcc => {\n            if (newAcc.error){\n                this.setState({\n                    error: newAcc.error\n                })\n            } else {\n            this.props.addAccount(newAcc)\n            this.props.history.push('/accounts')\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"account-form shadow-lg rounded\">\n\n                    {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null}\n\n                <h2>New Account</h2>\n                <Form onSubmit={this.handleSubmit} >\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"name\"  placeholder=\"Bank, lender, etc.\" value={this.state.name} onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Checking</option>\n                        <option>Savings</option>\n                        <option>Cash</option>\n                        <option>Investments</option>\n                        <option>Loan</option>\n                        <option>Credit Card</option>\n                        <option>Mortgage</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridBalance\">\n                    <Form.Label>Balance</Form.Label>\n                    <Form.Control type=\"number\" name=\"balance\" placeholder=\"$\" value={this.state.balance} onChange={this.handleBalanceChange} />\n                 </Form.Group>\n                </Form.Row>\n                <div>\n                <img className=\"account-from-image\" src={AccountsImg}>\n                </img>\n                </div>\n                <Button onClick={() => this.props.history.push('/accounts')}>Cancel</Button>\n                <Button type=\"submit\" variant=\"success\">Add Account</Button>\n    \n\n                </Form>\n\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    addAccount: addAccount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountForm)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountUpdateForm.js",["382"],"import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert'\nimport {Col} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport {connect} from 'react-redux';\nimport { updateAccount } from '../actions/accountActions';\nimport AccountsImg from '../images/Accounts.png'\n\nclass AccountUpdateForm extends React.Component {\n            state = {\n                name: \"\",\n                category: \"\",\n                balance: \"\"\n            }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleBalanceChange = (e) => {\n        this.setState({\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const id = e.target.id\n        fetch(`http://localhost:3000/accounts/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                name: this.state.name, \n                category: this.state.category, \n                balance: this.state.balance\n            })\n        })\n        .then(response => response.json())\n        .then(updatedAcc => {\n            if (updatedAcc.error){\n                this.setState({\n                    error: updatedAcc.error\n                })\n            } else {\n            this.props.updateAccount(updatedAcc)\n            this.props.history.push('/accounts')\n            }\n        })\n    }\n\n    componentDidMount = () => {\n        console.log(\"mount\")\n        if(this.props.selectAccount) {\n            this.setState({\n                name: this.props.selectAccount.name,\n                category: this.props.selectAccount.category,\n                balance: this.props.selectAccount.balance\n            })\n        } \n        }\n\n    render(){\n        return(\n            <div>\n                {this.props.selectAccount ? \n                            <div className=\"account-form shadow-lg rounded\">\n\n                                    {this.state.error ?\n                                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                                        <ul>\n                                            {this.state.error.map(message => {\n                                                return <li>{message}</li>\n                                            })}\n                                        </ul>\n                                    </Alert>\n                                    : null}\n\n                                <h2>Update Account</h2>\n                                <Form id={this.props.selectAccount.id} onSubmit={this.handleSubmit} >\n                                <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"name\"  placeholder=\"Bank, lender, etc.\" value={this.state.name} onChange={this.handleInputChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridCategory\">\n                                    <Form.Label>Category</Form.Label>\n                                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                                        <option>Select</option>\n                                        <option>Checking</option>\n                                        <option>Savings</option>\n                                        <option>Cash</option>\n                                        <option>Investments</option>\n                                        <option>Loan</option>\n                                        <option>Credit Card</option>\n                                        <option>Mortgage</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridBalance\">\n                                    <Form.Label>Balance</Form.Label>\n                                    <Form.Control type=\"number\" name=\"balance\" placeholder=\"$\" value={this.state.balance} onChange={this.handleBalanceChange} />\n                                </Form.Group>\n                                </Form.Row>\n                                <div>\n                                <img className=\"account-from-image\" src={AccountsImg}>\n                                </img>\n                                </div>\n                                <Button onClick={() => this.props.history.push('/accounts')}>Cancel</Button>\n                                <Button type=\"submit\" variant=\"success\" >Update Account</Button>\n                                </Form>\n                            </div>\n\n                            :\n                            <div>\n                                {this.props.history.push('/accounts')}\n                            </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectAccount: state.selectAccount\n    }\n}\n\nconst mapDispatchToProps = {\n    updateAccount: updateAccount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountUpdateForm)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetFrom.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetsPanel.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountTransactionsView.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionsPanel.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionForm.js",["383"],"import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport {Col} from 'react-bootstrap';\nimport {connect} from 'react-redux'\nimport { addTransaction } from '../actions/transactionActions';\nimport Test from '../images/Test.png'\nclass TransactionFrom extends React.Component {\n    state = {\n        date: \"\",\n        description: \"\",\n        amount: \"\",\n        category: \"\",\n        budget_id: \"\",\n        account_id: \"\",\n        to_account_id: \"\",\n        goal_id: \"\",\n        error: \"\"\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleInputId = (e) => {\n        this.setState({\n            [e.target.name]: parseInt(e.target.value)\n        })\n    }\n    handleInputAmt = (e) => {\n            this.setState({\n                [e.target.name]: parseFloat(e.target.value)\n            })\n    }\n\n\n\n    renderBudgets = () => {\n        return this.props.budgets.map(budgetObj => {\n            return <option value={budgetObj.id}>{budgetObj.name}</option>\n        })\n    }\n    renderAccounts = () => {\n        return this.props.accounts.map(accountObj => {\n            return <option value={accountObj.id}>{accountObj.name} - ${accountObj.balance}</option>\n        })\n    }\n    renderGoals = () => {\n        return this.props.goals.map(goalObj => {\n            return <option value={goalObj.id}>{goalObj.name}</option>\n        })\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/transactions\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                date: this.state.date,\n                description: this.state.description,\n                amount: this.state.amount,\n                budget_id: this.state.budget_id,\n                account_id: this.state.account_id,\n                to_account_id: this.state.to_account_id,\n                goal_id: this.state.goal_id,\n                category: this.state.category\n            })\n        })\n        .then(response => response.json())\n        .then(newTransObj => {\n            if (newTransObj.error){\n                this.setState({\n                    error: newTransObj.error\n                })\n            } else {\n            this.props.addTransaction(newTransObj)\n            this.props.history.goBack()\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"transaction-form\" >\n\n                {this.state.error ?\n                    <Alert className=\"alert\" variant=\"danger\" onClose={() => this.setState({error: ''})} dismissible>\n                        <Alert.Heading>Oops! Something went wrong!</Alert.Heading>\n                        <ul>\n                            {this.state.error.map(message => {\n                                return <li>{message}</li>\n                            })}\n                        </ul>\n                    </Alert>\n                    : null }\n\n                    <h1>New Transaction</h1>\n                <Form onSubmit={this.handleSubmit} >\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridDate\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control type=\"date\" name=\"date\"  placeholder=\"Select transaction date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" placeholder=\"Vendor, purchase, etc.\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCategory\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control as=\"select\" name=\"category\" value={this.state.category} onChange={this.handleInputChange} >\n                        <option>Select</option>\n                        <option>Auto & Transport</option>\n                        <option>Bills & Utilities</option>\n                        <option>Business Services</option>\n                        <option>Education</option>\n                        <option>Entertainment</option>\n                        <option>Fees & Charges</option>\n                        <option>Financial</option>\n                        <option>Food & Dining</option>\n                        <option>Gifts & Donations</option>\n                        <option>Health & Fitness</option>\n                        <option>Home</option>\n                        <option>Income</option>\n                        <option>Investments</option>\n                        <option>Kids</option>\n                        <option>Loans</option>\n                        <option>Misc Expenses</option>\n                        <option>Personal Care</option>\n                        <option>Pets</option>\n                        <option>Shopping</option>\n                        <option>Taxes</option>\n                        <option>Transfer</option>\n                        <option>Travel</option>\n                        <option>Withdrawal</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridBudgetId\">\n                    <Form.Label>Budget </Form.Label>\n                    <Form.Control as=\"select\" name=\"budget_id\" value={this.state.budget_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderBudgets()}\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridGoalId\">\n                    <Form.Label>Goal</Form.Label>\n                    <Form.Control as=\"select\" name=\"goal_id\" value={this.state.goal_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderGoals()}\n                    </Form.Control>\n                </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFromAccount\">\n                    <Form.Label>From Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"account_id\" value={this.state.account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridToAccount\">\n                    <Form.Label>To Account</Form.Label>\n                    <Form.Control as=\"select\" name=\"to_account_id\" value={this.state.to_account_id} onChange={this.handleInputId}>\n                        <option>Choose...</option>\n                        {this.renderAccounts()}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridAmount\">\n                    <Form.Label>Amount</Form.Label>\n                    <Form.Control type=\"number\" name=\"amount\" as=\"input\" value={this.state.amount} onChange={this.handleInputAmt} step=\"0.01\"/>\n                    </Form.Group>\n                </Form.Row>\n                <img className=\"transaction-form-image\" src={Test} height=\"300px\" width=\"300px\" >\n                </img><br></br>\n                <div className=\"form-buttons\">\n                <Button onClick={() => this.props.history.goBack()}>Cancel</Button>\n                <Button variant=\"success\" type=\"submit\">Add Transaction</Button>\n                </div>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        budgets: state.budgets,\n        accounts: state.accounts,\n        goals: state.goals,\n    }\n}\n\nconst mapDispatchToProps = {\n    addTransaction: addTransaction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionFrom)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetUpdateForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillsPanel.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillUpdateForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/SignUp.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalUpdateForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalView.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/currentUser.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/transactions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/accounts.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetView.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalsPanel.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalForm.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/budgets.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/userActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectAccount.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/bills.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectBudget.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectTransaction.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectBill.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/reducers/selectGoal.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountsContainer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionsContainer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalsContainer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetsContainer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillsContainer.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/goalsActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalViewItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalPanelItem.js",["384"],"import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport { deleteGoal, selectGoal, updateGoal } from '../actions/goalsActions';\nimport moment from 'moment'\nimport {TrashFill, GearWideConnected, Check2Circle} from 'react-bootstrap-icons'\nimport Confetti from 'react-dom-confetti';\n\nclass GoalPanelItem extends React.Component {\n    state = {\n        confetti: false\n    }\n\n    handleUpdate = (e) => {\n        const id = e.currentTarget.id\n        this.props.selectGoal(this.props.goal)\n        this.props.history.push(`/goals/edit/${id}`)\n    }\n\n    handleMarkComplete = (e) => {\n        const id = e.currentTarget.id\n        fetch(`http://localhost:3000/goals/${id}`, {\n            method: \"PATCH\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                complete: true\n            })\n        })\n        .then(response => response.json())\n        .then(updatedGoal => {\n            this.props.updateGoal(updatedGoal)\n            this.setState({\n                confetti: true\n            })\n        })\n    }\n\n    handleDelete = (e) => {\n        const id = parseInt(e.currentTarget.id)\n        fetch(`http://localhost:3000/goals/${id}`, {method: \"DELETE\"})\n        .then(response => response.json())\n        .then(() => {\n            this.props.deleteGoal(id)\n        })\n    }\n\n    handleView = () => {\n        this.props.selectGoal(this.props.goal)\n        this.props.history.push('/goalview')\n    }\n\n    renderDaysLeft = () => {\n        let daysLeft = Math.abs(moment().diff(this.props.goal.due_date, \"days\"))\n        return daysLeft\n    }\n\n    renderAmountLeft = () => {\n        let goalTransactions = [0];\n        let balanceRemaining = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        this.props.transactions.map(transaction => {\n            if (transaction.goal_id === this.props.goal.id) {\n                goalTransactions.push(transaction.amount)\n            }\n        })\n        goalTransactions = Math.round(goalTransactions.reduce(reducer))\n        balanceRemaining = this.props.goal.amount - goalTransactions\n        return balanceRemaining.toLocaleString()\n    }\n\n    render(){\n\n        const {id, name, description, amount, due_date, complete} = this.props.goal\n\n        const config = {\n            angle: \"219\",\n            spread: \"281\",\n            startVelocity: 40,\n            elementCount: \"168\",\n            dragFriction: 0.12,\n            duration: 3000,\n            stagger: 3,\n            width: \"10px\",\n            height: \"10px\",\n            perspective: \"500px\",\n            colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n          };\n\n        return(\n                 <tr>\n                    <td className=\"align-middle\">{name}</td>\n                    <td className=\"align-middle\">{due_date}</td>\n                    <td className=\"align-middle\">{description}</td>\n                    <td className=\"align-middle\">${amount.toLocaleString()}</td>\n                    <td className=\"align-middle\">${this.renderAmountLeft()} left</td>\n                    <td className=\"align-middle\">{this.renderDaysLeft()}</td>\n                    <td className=\"align-middle\">\n                    {complete ? \n                    <Button size=\"sm\" disabled variant=\"success\" >Completed <Confetti active={this.state.confetti} config={ config }/></Button>\n                    :\n                    <span>\n                    <Button size=\"sm\" id={id} variant=\"success\" onClick={this.handleMarkComplete} >Complete {<Check2Circle/>} </Button>\n                    <Button size=\"sm\" id={id} onClick={this.handleView}>View</Button>\n                    <Button size=\"sm\" id={id} onClick={this.handleUpdate} >{<GearWideConnected/>}</Button>\n                    </span>\n                    }\n                    <Button size=\"sm\" id={id} variant=\"danger\" onClick={this.handleDelete}>{<TrashFill/>}</Button>\n                    </td>\n                </tr>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteGoal: deleteGoal,\n    selectGoal: selectGoal,\n    updateGoal: updateGoal\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GoalPanelItem))","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetViewItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/billActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillPanelItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BillContainerItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetContainerItem.js",["385"],"import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\n\n\nclass BudgetsContainerItem extends React.Component {\n\n\n    filterTransactions = () => {\n        let budgetTransactions = [0];\n        this.props.transactions.map(transaction => {\n            if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n                budgetTransactions.push(transaction.amount)\n            }\n        })\n        return budgetTransactions\n    }\n\n    // RENDERS RATIO FOR TRANSACTIONS THAT MATCH BUDGET_ID AND CHECKS FOR CURRENT YEAR + MONTH\n    renderRatio = () => {\n        // let budgetTransactions = [0];\n        let ratio = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        // this.props.transactions.map(transaction => {\n        //     if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n        //         budgetTransactions.push(transaction.amount)\n        //     }\n        // })\n            let budgetTransactions = this.filterTransactions()\n            budgetTransactions = Math.round(budgetTransactions.reduce(reducer))\n            ratio = ((budgetTransactions/this.props.budget.amount)*100)\n            return ratio\n    }\n\n    // RENDERS PROGRESS BAR COLOR DEPENDING ON RATIO, FUNCTION NEEDS REFACTORING\n    renderBarStatus = () => {\n        // let budgetTransactions = [0];\n        let ratio = 0;\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n        // this.props.transactions.map(transaction => {\n        //     if (transaction.budget_id === this.props.budget.id && transaction.date.split(\"-\")[0] + \"-\" + transaction.date.split(\"-\")[1] === moment().format(\"YYYY-MM\")) {\n        //         budgetTransactions.push(transaction.amount)\n        //     }\n        // })\n\n            let budgetTransactions = this.filterTransactions()\n\n            budgetTransactions = Math.round(budgetTransactions.reduce(reducer))\n            ratio = ((budgetTransactions/this.props.budget.amount)*100)\n\n            if (ratio > 100) {\n                return \"danger\"\n            } if ( ratio > 80) {\n                return \"warning\"\n            } else {\n                return \"success\"\n            }\n    }\n\n    render(){\n        return (\n            <div>\n                <ListGroup.Item>\n                <h5>{this.props.budget.name}</h5>\n                <div>\n                <ProgressBar animated striped variant={this.renderBarStatus()} now={this.renderRatio()} />\n                </div>\n                </ListGroup.Item>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nexport default connect(mapStateToProps, null)(BudgetsContainerItem)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/GoalContainerItem.js",["386"],"import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport {connect} from 'react-redux'\n\n\nclass GoalContainerItem extends React.Component {\n\n    renderGoalProgress = () => {\n        if(!this.props.goal.complete){\n\n            let goalTransactions = [0];\n            let progress = 0;\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    \n            this.props.transactions.map(transaction => {\n                if(transaction.goal_id === this.props.goal.id) {\n                    goalTransactions.push(transaction.amount)\n                }\n            })\n    \n            goalTransactions = Math.round(goalTransactions.reduce(reducer))\n            progress = ((goalTransactions/this.props.goal.amount)*100)\n            return progress\n        } else {\n            return 100\n        }\n    }\n\n\n\n    render(){\n        return (\n            <div>\n                <ListGroup.Item>\n                <h5>{this.props.goal.name}</h5>\n                <div>\n                <ProgressBar animated striped variant=\"info\" now={this.renderGoalProgress()} />\n                </div>\n                </ListGroup.Item>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        transactions: state.transactions\n    }\n}\n\nexport default connect(mapStateToProps, null)(GoalContainerItem)","/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/transactionActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/budgetActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/BudgetPanelItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionContainerItem.js",[],["387","388"],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/TransactionPanelItem.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/actions/accountActions.js",[],"/Users/islammadkaur/Documents/Projects to learn/Capitall/CapitallFrontend-main/src/components/AccountPanelItem.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/index.js",[],["389","390"],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/App.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/index.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/DocSignIn.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/actions/userActions.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/currentUser.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/actions/doctorActions.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/loggedin/Dashboard.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/DocSignUp.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/loggedin/DoctorDashboard.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/type/DocApp.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/type/UserApp.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/UserEditForm.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/SignUp.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/SignIn.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/Footer.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/user/NavBar.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/doctor/NavBar.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/reducers/currentDoctor.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/components/LoggedInFooter.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/index.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/NavBar.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/InsuranceContainer.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/InsuranceList.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/SpecialtiesContainer.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/SpecialtyList.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/HomeContainer.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/Title.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/SearchBar.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/ResultsCon.js",[],"/Users/islammadkaur/Desktop/showcase-projects/Mdfied/mdfiedfrontend/src/LoggedOut/home/Results.js",[],["391","392"],{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":178,"column":17,"nodeType":"399","endLine":178,"endColumn":98},{"ruleId":"397","severity":1,"message":"398","line":95,"column":17,"nodeType":"399","endLine":95,"endColumn":71},{"ruleId":"397","severity":1,"message":"398","line":108,"column":33,"nodeType":"399","endLine":108,"endColumn":87},{"ruleId":"397","severity":1,"message":"398","line":185,"column":17,"nodeType":"399","endLine":185,"endColumn":98},{"ruleId":"400","severity":1,"message":"401","line":63,"column":49,"nodeType":"402","messageId":"403","endLine":63,"endColumn":51},{"ruleId":"400","severity":1,"message":"401","line":13,"column":49,"nodeType":"402","messageId":"403","endLine":13,"endColumn":51},{"ruleId":"400","severity":1,"message":"401","line":16,"column":53,"nodeType":"402","messageId":"403","endLine":16,"endColumn":55},{"ruleId":"393","replacedBy":"404"},{"ruleId":"395","replacedBy":"405"},{"ruleId":"393","replacedBy":"406"},{"ruleId":"395","replacedBy":"407"},{"ruleId":"393","replacedBy":"408"},{"ruleId":"395","replacedBy":"409"},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["410"],["411"],["410"],["411"],["410"],["411"],"no-global-assign","no-unsafe-negation"]